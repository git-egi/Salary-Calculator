/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

/**
 *
 * @author user
 */
public class mainframe extends javax.swing.JFrame {
    
    static ArrayList<Float> monthlysalary = new ArrayList<Float>();
    //onoma
    static ArrayList<String> firstNames = new ArrayList<String>();
    //epwnumo
    static ArrayList<String> surNames = new ArrayList<String>();
    //basikos misthos
    static ArrayList<Float> salaries = new ArrayList<Float>();
    //eidikothta
    static ArrayList<String> job = new ArrayList<String>();
    //etos proslipsis
    static ArrayList<Integer> year = new ArrayList<Integer>();
    //upoxrewtiko mhniaio wrarario
    static ArrayList<Integer> hours = new ArrayList<Integer>();
    //prosauksisi
    static ArrayList<Float> increase = new ArrayList<Float>();
   
    static ArrayList<Float> overhours = new ArrayList<Float>();

    /**
     * Creates new form mainframe
     */
    public mainframe() {
        this.setTitle("Salary Calculator v.1.0");
        this.setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        nameJList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        label2 = new java.awt.Label();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        nameJList.setBackground(new java.awt.Color(102, 102, 102));
        nameJList.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nameJList.setForeground(new java.awt.Color(255, 255, 255));
        nameJList.setModel(new javax.swing.AbstractListModel<String>() {
            ArrayList<String> fnames = getFirstNames();
            ArrayList<String> lnames = getLastNames();
            public int getSize() { return fnames.size(); }
            public String getElementAt(int i) { return fnames.get(i)+" "+lnames.get(i); }
        });
        jScrollPane1.setViewportView(nameJList);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        label1.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        label1.setForeground(new java.awt.Color(157, 119, 44));
        label1.setText("Type the overhours below");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setToolTipText("");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        label2.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        label2.setForeground(new java.awt.Color(157, 119, 44));
        label2.setText("Monthly Salary is");

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setToolTipText("");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                String _input = jTextField1.getText();
        int _selected = nameJList.getSelectedIndex();
        if(firstNames.size() > 0 && _selected >= 0 && _selected <= firstNames.size()-1){
            setOverhours(_selected,Float.parseFloat(_input));
            calculateSalary(_selected);
            printMonthlySalary(_selected);
            String sal = String.format("%.2f", getMonthlySalary(_selected));
            sal = sal + " €";
            jTextField2.setText(sal);
        }else{
            System.out.println("No employee selected!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        
        String filename = args[0];
        
        BufferedReader inp = openFile(filename,"UTF-8");
	
        
        // This list is going to hold the data of the file
        // Then split on other lists
	ArrayList<String> data = new ArrayList<String>();
	
        // This is going to hold one line of the file at a time
	String dataline;
	
        //While we haven't reached the EOF
        //Add each line as a list index
	while((dataline = inp.readLine()) != null){
            data.add(dataline);
	}
        
        splitIntoLists(data);
        
        //Initialize overhours for each employee with value 0
        initOverhours();
	//Set Employee Raise values
        setEmployeeRaise();	
        //Calculate and set Monthly Salary
	initMonthlySalary();
        
        printMonthlySalaries();
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainframe().setVisible(true);
            }
        });
             
    }
    
    public static void calculateSalary(int _index){
        Float tmpmonthlysalary = salaries.get(_index) + (overhours.get(_index)/hours.get(_index))*salaries.get(_index)*increase.get(_index);
        monthlysalary.set(_index,tmpmonthlysalary);
    }
    
    
    public static void setEmployeeRaise(){
        for(int i = 0; i<job.size(); i++) {
            String tmpjob = job.get(i);
			
            if(tmpjob.equals("Καθηγητής")!=tmpjob.equals("Αναπληρωτής")!=tmpjob.equals("Επίκουρος")!=tmpjob.equals("Λέκτορας")!=tmpjob.equals("ΕΔΙΠ")) {
		increase.add((float) 1.5);		
            }else {
		increase.add((float) 1.6);
            }
	}
    }
    
    public static void splitIntoLists(ArrayList<String> _data){
        for(int i = 0; i < _data.size(); i++) {
            String[] output = _data.get(i).split("#");
            firstNames.add(output[0]);
            surNames.add(output[1]);
            output[2] = output[2].replace(',', '.');
            salaries.add(Float.valueOf(output[2]));
            job.add(output[3]);
            year.add(Integer.valueOf(output[4]));
            hours.add(Integer.valueOf(output[5]));
	}
    }
    
    public static Float getMonthlySalary(int _index){
        return monthlysalary.get(_index);
    }
    
    public static void printMonthlySalary(int _index){
        System.out.println("   First Name\tSur Name\tMonthly Salary");
	System.out.println("---------------------------------------------------------");
        System.out.printf("%d. %-12s\t%-13s\t%.2f\tEuros\n", 1, firstNames.get(_index),surNames.get(_index),monthlysalary.get(_index));
            System.out.println("---------------------------------------------------------");
    }
   
    public static void printMonthlySalaries(){
        System.out.println("   First Name\tSur Name\tMonthly Salary");
	System.out.println("---------------------------------------------------------");
	for(int i = 0; i < firstNames.size(); i++) {
            System.out.printf("%d. %-12s\t%-13s\t%.2f\tEuros\n", i, firstNames.get(i),surNames.get(i),monthlysalary.get(i));
            System.out.println("---------------------------------------------------------");
	}
    }
    
    public static BufferedReader openFile(String _fname,String _encoding) throws IOException{
        
        File _f = new File(_fname);
        if(!_f.exists()){
            System.out.println("File does not exist");
            System.exit(0);
	}
    
        BufferedReader _ret = new BufferedReader(new InputStreamReader(new FileInputStream(_f),_encoding));    
        return _ret;
    }
    
    public static void setOverhours(int _index,Float _num){
        mainframe.overhours.set(_index,_num);
    }
    
    public static void initOverhours(){
        int size = mainframe.firstNames.size();
        for(int i=0; i<size; i++){
            mainframe.overhours.add((float)0);
        }
    }
    
    public static void initMonthlySalary() {
	for(int i=0; i<firstNames.size(); i++) {
            Float tmpsalary = salaries.get(i) + (overhours.get(i)/hours.get(i))*salaries.get(i)*increase.get(i);
            monthlysalary.add((float) tmpsalary);
	}
    }
    
    public static ArrayList<String> getFirstNames(){
        return mainframe.firstNames;
    }
    
    public static ArrayList<String> getLastNames(){
        return mainframe.surNames;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JList<String> nameJList;
    // End of variables declaration//GEN-END:variables
}



